# This file is used to observe the behaviour of the matchers that work on the rdfs:label, rdfs:comment level
# In this case a sample that has been retrieved from the WoD is used to find:
#   (1) for the positive cases, pairs that have been retrieved by crawling that have owl:equivalentClass/Property
#		(1.1) we then retrieve the rdfs:label from them we then run the matcher on the set of labels obtained,
#		      we already know that are equivalent and therefore we classify them in the TP case
#
#	(2) for the negative cases, we look for pairs retrieved from a random crawling that have owl:disjointWith etc
#		(2.1) we then run the matchers on the rdfs:label we classify them as the FP case
#		

#
# Akoma na to xrisimopoiisw afto, prepei na skeftw pws tha to kanw
#
# 	 

train_matcher_align = x-ns://train.matcher/temp/align
train_matcher_onto = x-ns://train.matcher/temp/onto
train_classify_tp = x-ns://train.matcher/classify/tp
train_classify_fp = x-ns://train.matcher/classify/fp

# The following Named Graph is used to read the triples from a sample that is in a file
read_sample_from_file = False
sparql_data_sample = x-ns://train.matcher/temp/sample
location_of_sample = ./src/test/resources/training/lov_aggregator.rdf

# If a sample is already in a Named Graph, specify the Named Graph no need to read it
# in x-ns://train.matcher/temp/sample, point directly to the Named Graph
read_sample_from_endpoint = True
endpoint_data_uri = x-ns://train.metadata/endpoint/data